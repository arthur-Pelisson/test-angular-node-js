{
  "_args": [
    [
      {
        "raw": "wkx@^0.4.1",
        "scope": null,
        "escapedName": "wkx",
        "name": "wkx",
        "rawSpec": "^0.4.1",
        "spec": ">=0.4.1 <0.5.0",
        "type": "range"
      },
      "/var/www/html/projet/test-angular-nodeJS-V2/api/node_modules/sequelize"
    ]
  ],
  "_from": "wkx@^0.4.1",
  "_hasShrinkwrap": false,
  "_id": "wkx@0.4.7",
  "_location": "/wkx",
  "_nodeVersion": "8.11.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/wkx_0.4.7_1559894025081_0.06520618153461921"
  },
  "_npmUser": {
    "name": "cschwarz",
    "email": "christian.schwarz@refactory.at"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "wkx@^0.4.1",
    "scope": null,
    "escapedName": "wkx",
    "name": "wkx",
    "rawSpec": "^0.4.1",
    "spec": ">=0.4.1 <0.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sequelize"
  ],
  "_resolved": "https://registry.npmjs.org/wkx/-/wkx-0.4.7.tgz",
  "_shasum": "ba0e4f9e785e95c9975856c1834f19a95c65cfb5",
  "_shrinkwrap": null,
  "_spec": "wkx@^0.4.1",
  "_where": "/var/www/html/projet/test-angular-nodeJS-V2/api/node_modules/sequelize",
  "author": {
    "name": "Christian Schwarz"
  },
  "bugs": {
    "url": "https://github.com/cschwarz/wkx/issues"
  },
  "dependencies": {
    "@types/node": "*"
  },
  "description": "A WKT/WKB/EWKT/EWKB/TWKB/GeoJSON parser and serializer",
  "devDependencies": {
    "async": "^3.0.1",
    "browserify": "^16.2.3",
    "coveralls": "^3.0.4",
    "deep-eql": "^4.0.0",
    "istanbul": "^0.4.5",
    "jshint": "^2.10.2",
    "json-stringify-pretty-compact": "^2.0.0",
    "mkdirp": "^0.5.1",
    "mocha": "^6.1.4",
    "pg": "^7.11.0",
    "uglify-js": "^3.6.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-pHf546L96TK8RradLt1cWaIffstgv/zXZ14CGz5KnBs1AxBX0wm+IDphjJw0qrEqRv8P9W9CdTt8Z1unMRZ19A==",
    "shasum": "ba0e4f9e785e95c9975856c1834f19a95c65cfb5",
    "tarball": "https://registry.npmjs.org/wkx/-/wkx-0.4.7.tgz",
    "fileCount": 20,
    "unpackedSize": 280457,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc+hgJCRA9TVsSAnZWagAAg7YP/1gSPDk9zLSI/+gZ85HJ\ngLVSDWSxh8zF0/IEmNN/QCZR+ESOGHXqI4m99VCpgd1Zvd8AQmRhkEwqfr3l\nQoLlgYyndqt9omoxmoe0LOShqnsGFVZxdq0ngqWFKrc5SugYu7Q2SHYtox1S\nYRO173PfpLT39Yo3WoQQzBRwffk/eMweKlvHZddesuoVhCwC8IauutUx9ULf\n+SNXUBjorMw5qIUAEDfjtJPkIDgZmZA0J/UpQvj1Z6OZkXQ+dd9UxZdU9n87\nQFWtQVueweDTkPVqT9AnVallnOhuw+l1YDwJA4YA7/vAZzvqMEJyHCuRAMJK\n3VRr5ehnwldyrpEp57/Q3u2rx5uJsqn5uN4001iZakbTGaRBDLZxjZPsPukm\nbyf2C6ViPQeGjlxRewZhfI427ye/9375J8Cz1q5mlQ2sf23sBWPrAXSVysA6\nqvXqBp/PPZmp1mJ4Ug1oycK2Nikimp0MmL/Pg4VwL7dzWxp189rUhnD6H4Ko\nFDn58hBvyiRthayhrQskXhuc/WlIcWl7t9HxqZ3htY+g6+noSCEFHOyd5K2H\nW3wXADf+TIesMM8rWmW35919IXTtMOoASRSM0NOh0kU/Ay3Eyuf+R+kHV7mo\nQ39asELhYKuMpe0aG2wAJyovLSEhCfio9yb7r4zPjCdBW214lhm9xoVdXc7l\nTA+X\r\n=25tX\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "dist/",
    "lib/"
  ],
  "gitHead": "3412b4f345650bdad81eaf820dd294f8d9791ffe",
  "homepage": "https://github.com/cschwarz/wkx#readme",
  "keywords": [
    "wkt",
    "wkb",
    "ewkt",
    "ewkb",
    "twkb",
    "geojson",
    "ogc",
    "geometry",
    "geography",
    "spatial"
  ],
  "license": "MIT",
  "main": "lib/wkx.js",
  "maintainers": [
    {
      "name": "cschwarz",
      "email": "christian.schwarz@refactory.at"
    }
  ],
  "name": "wkx",
  "optionalDependencies": {},
  "readme": "wkx [![Build Status](https://travis-ci.org/cschwarz/wkx.svg?branch=master)](https://travis-ci.org/cschwarz/wkx) [![Coverage Status](https://coveralls.io/repos/cschwarz/wkx/badge.svg?branch=master)](https://coveralls.io/r/cschwarz/wkx?branch=master)\r\n========\r\n\r\nA WKT/WKB/EWKT/EWKB/TWKB/GeoJSON parser and serializer with support for\r\n\r\n- Point\r\n- LineString\r\n- Polygon\r\n- MultiPoint\r\n- MultiLineString\r\n- MultiPolygon\r\n- GeometryCollection\r\n\r\nExamples\r\n--------\r\n\r\nThe following examples show you how to work with wkx.\r\n\r\n```javascript\r\nvar wkx = require('wkx');\r\n\r\n//Parsing a WKT string\r\nvar geometry = wkx.Geometry.parse('POINT(1 2)');\r\n\r\n//Parsing an EWKT string\r\nvar geometry = wkx.Geometry.parse('SRID=4326;POINT(1 2)');\r\n\r\n//Parsing a node Buffer containing a WKB object\r\nvar geometry = wkx.Geometry.parse(wkbBuffer);\r\n\r\n//Parsing a node Buffer containing an EWKB object\r\nvar geometry = wkx.Geometry.parse(ewkbBuffer);\r\n\r\n//Parsing a node Buffer containing a TWKB object\r\nvar geometry = wkx.Geometry.parseTwkb(twkbBuffer);\r\n\r\n//Parsing a GeoJSON object\r\nvar geometry = wkx.Geometry.parseGeoJSON({ type: 'Point', coordinates: [1, 2] });\r\n\r\n//Serializing a Point geometry to WKT\r\nvar wktString = new wkx.Point(1, 2).toWkt();\r\n\r\n//Serializing a Point geometry to WKB\r\nvar wkbBuffer = new wkx.Point(1, 2).toWkb();\r\n\r\n//Serializing a Point geometry to EWKT\r\nvar ewktString = new wkx.Point(1, 2, undefined, undefined, 4326).toEwkt();\r\n\r\n//Serializing a Point geometry to EWKB\r\nvar ewkbBuffer = new wkx.Point(1, 2, undefined, undefined, 4326).toEwkb();\r\n\r\n//Serializing a Point geometry to TWKB\r\nvar twkbBuffer = new wkx.Point(1, 2).toTwkb();\r\n\r\n//Serializing a Point geometry to GeoJSON\r\nvar geoJSONObject = new wkx.Point(1, 2).toGeoJSON();\r\n```\r\n\r\nBrowser\r\n-------\r\n\r\nTo use `wkx` in a webpage, simply copy a built browser version from `dist/` into your project, and use a `script` tag\r\nto include it:\r\n```html\r\n<script src=\"wkx.js\"></script>\r\n```\r\n\r\nIf you use [browserify][] for your project, you can simply `npm install wkx --save`, and just require `wkx` as usual in\r\nyour code.\r\n\r\n----\r\n\r\nRegardless of which of the preceeding options you choose, using `wkx` in the browser will look the same:\r\n```javascript\r\nvar wkx = require('wkx');\r\n\r\nvar geometry = wkx.Geometry.parse('POINT(1 2)');\r\n\r\nconsole.log(geometry.toGeoJSON());\r\n```\r\n\r\nIn addition to the `wkx` module, the browser versions also export `buffer`, which is useful for parsing WKB:\r\n```javascript\r\nvar Buffer = require('buffer').Buffer;\r\nvar wkx = require('wkx');\r\n\r\nvar wkbBuffer = new Buffer('0101000000000000000000f03f0000000000000040', 'hex');\r\nvar geometry = wkx.Geometry.parse(wkbBuffer);\r\n\r\nconsole.log(geometry.toGeoJSON());\r\n```\r\n[browserify]: http://browserify.org/\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/cschwarz/wkx.git"
  },
  "scripts": {
    "build": "mkdirp ./dist && browserify -r buffer -r ./lib/wkx.js:wkx ./lib/wkx.js > ./dist/wkx.js && uglifyjs -c -m -- ./dist/wkx.js > ./dist/wkx.min.js",
    "coveralls": "istanbul cover node_modules/mocha/bin/_mocha -- -R spec && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage",
    "test": "jshint . && mocha"
  },
  "types": "lib/wkx.d.ts",
  "version": "0.4.7"
}
