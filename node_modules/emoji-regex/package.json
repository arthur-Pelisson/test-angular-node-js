{
  "_args": [
    [
      {
        "raw": "emoji-regex@^7.0.1",
        "scope": null,
        "escapedName": "emoji-regex",
        "name": "emoji-regex",
        "rawSpec": "^7.0.1",
        "spec": ">=7.0.1 <8.0.0",
        "type": "range"
      },
      "/var/www/html/projet/test-angular-nodeJS-V2/node_modules/cliui/node_modules/string-width"
    ]
  ],
  "_from": "emoji-regex@^7.0.1",
  "_hasShrinkwrap": false,
  "_id": "emoji-regex@7.0.3",
  "_location": "/emoji-regex",
  "_nodeVersion": "10.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/emoji-regex_7.0.3_1545388005752_0.10144054418270465"
  },
  "_npmUser": {
    "name": "mathias",
    "email": "mathias@qiwi.be"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "emoji-regex@^7.0.1",
    "scope": null,
    "escapedName": "emoji-regex",
    "name": "emoji-regex",
    "rawSpec": "^7.0.1",
    "spec": ">=7.0.1 <8.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/cliui/string-width",
    "/wrap-ansi/string-width",
    "/yargs/string-width"
  ],
  "_resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
  "_shasum": "933a04052860c85e83c122479c4748a8e4c72156",
  "_shrinkwrap": null,
  "_spec": "emoji-regex@^7.0.1",
  "_where": "/var/www/html/projet/test-angular-nodeJS-V2/node_modules/cliui/node_modules/string-width",
  "author": {
    "name": "Mathias Bynens",
    "url": "https://mathiasbynens.be/"
  },
  "bugs": {
    "url": "https://github.com/mathiasbynens/emoji-regex/issues"
  },
  "dependencies": {},
  "description": "A regular expression to match all Emoji-only symbols as per the Unicode Standard.",
  "devDependencies": {
    "@babel/cli": "^7.0.0",
    "@babel/core": "^7.0.0",
    "@babel/plugin-proposal-unicode-property-regex": "^7.0.0",
    "@babel/preset-env": "^7.0.0",
    "mocha": "^5.2.0",
    "regexgen": "^1.3.0",
    "unicode-11.0.0": "^0.7.7",
    "unicode-tr51": "^9.0.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==",
    "shasum": "933a04052860c85e83c122479c4748a8e4c72156",
    "tarball": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",
    "fileCount": 8,
    "unpackedSize": 36261,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcHL/mCRA9TVsSAnZWagAAalkP/iJsyPSIxjYjFQHMXabJ\niQ6yZ4jVzp4QtpAcZlcWl8Nn7PgG0DS0cTQFlWHWOyuHNhJMzUtvRqaT9fqK\nB8M4IyDwWZnyRDMCHxZUi5ZYVVLifGIm+eCVTGKrpjNIb/XOhtvLdpE2QjfK\nASdwKa7YpsS1dbT3Cs4u4SDxEjrE2WpH93ZjZEalIvgMH0/2zH2QNKaqBPJH\n+aPixBEan21Ur60KQEE72UsGm3zjwdAn5pcN2r6mhgEJCCcZMk3J6b6I8w9N\ntF9tzLawZU4ai2dBIan4CxnXABWBReSyMSZnzIOy5a7wqHMnQpG1mjMfsVP7\nkcyvCgdL9msoJpHgDuWH7ZQCEOPO12rzHdDQyglBd0TPUEdS/6UwidE3ZO3U\nbk6yUQjcgGsV/5XUid+xwMLlJW3dAJ1CsCnx6j/Vh38vid5evvhrUSN2JlC2\ndguPh6wabKMhaFXo+9rwncwtn6pZVkRraGeB6RlVj+tBQf9rdc2k7D9ef2l2\nrWrnvYE1I0VHVha3zIGHm4VQEsMaJa3CoZRWmOdxyqvupnvr4pxGcIf6oTPp\nftJ89kWZzIeXT1we3PtVopBmo6iBT7PioqiX8g1Dgl9zQt1hhqZ2w/G8kNZB\ngkhZT2g3Fi1ikzZDNXpjpMmaXfDXk8+IgpwNwh2PUMP3/HIJcg9GgjKM8v61\nvPcb\r\n=CeP6\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "LICENSE-MIT.txt",
    "index.js",
    "index.d.ts",
    "text.js",
    "es2015/index.js",
    "es2015/text.js"
  ],
  "gitHead": "3cbaf44e18f4996464ce97f1484ef425bbe8864a",
  "homepage": "https://mths.be/emoji-regex",
  "keywords": [
    "unicode",
    "regex",
    "regexp",
    "regular expressions",
    "code points",
    "symbols",
    "characters",
    "emoji"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mathias",
      "email": "mathias@qiwi.be"
    }
  ],
  "name": "emoji-regex",
  "optionalDependencies": {},
  "readme": "# emoji-regex [![Build status](https://travis-ci.org/mathiasbynens/emoji-regex.svg?branch=master)](https://travis-ci.org/mathiasbynens/emoji-regex)\n\n_emoji-regex_ offers a regular expression to match all emoji symbols (including textual representations of emoji) as per the Unicode Standard.\n\nThis repository contains a script that generates this regular expression based on [the data from Unicode Technical Report #51](https://github.com/mathiasbynens/unicode-tr51). Because of this, the regular expression can easily be updated whenever new emoji are added to the Unicode standard.\n\n## Installation\n\nVia [npm](https://www.npmjs.com/):\n\n```bash\nnpm install emoji-regex\n```\n\nIn [Node.js](https://nodejs.org/):\n\n```js\nconst emojiRegex = require('emoji-regex');\n// Note: because the regular expression has the global flag set, this module\n// exports a function that returns the regex rather than exporting the regular\n// expression itself, to make it impossible to (accidentally) mutate the\n// original regular expression.\n\nconst text = `\n\\u{231A}: ⌚ default emoji presentation character (Emoji_Presentation)\n\\u{2194}\\u{FE0F}: ↔️ default text presentation character rendered as emoji\n\\u{1F469}: 👩 emoji modifier base (Emoji_Modifier_Base)\n\\u{1F469}\\u{1F3FF}: 👩🏿 emoji modifier base followed by a modifier\n`;\n\nconst regex = emojiRegex();\nlet match;\nwhile (match = regex.exec(text)) {\n  const emoji = match[0];\n  console.log(`Matched sequence ${ emoji } — code points: ${ [...emoji].length }`);\n}\n```\n\nConsole output:\n\n```\nMatched sequence ⌚ — code points: 1\nMatched sequence ⌚ — code points: 1\nMatched sequence ↔️ — code points: 2\nMatched sequence ↔️ — code points: 2\nMatched sequence 👩 — code points: 1\nMatched sequence 👩 — code points: 1\nMatched sequence 👩🏿 — code points: 2\nMatched sequence 👩🏿 — code points: 2\n```\n\nTo match emoji in their textual representation as well (i.e. emoji that are not `Emoji_Presentation` symbols and that aren’t forced to render as emoji by a variation selector), `require` the other regex:\n\n```js\nconst emojiRegex = require('emoji-regex/text.js');\n```\n\nAdditionally, in environments which support ES2015 Unicode escapes, you may `require` ES2015-style versions of the regexes:\n\n```js\nconst emojiRegex = require('emoji-regex/es2015/index.js');\nconst emojiRegexText = require('emoji-regex/es2015/text.js');\n```\n\n## Author\n\n| [![twitter/mathias](https://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](https://twitter.com/mathias \"Follow @mathias on Twitter\") |\n|---|\n| [Mathias Bynens](https://mathiasbynens.be/) |\n\n## License\n\n_emoji-regex_ is available under the [MIT](https://mths.be/mit) license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mathiasbynens/emoji-regex.git"
  },
  "scripts": {
    "build": "rm -rf -- es2015; babel src -d .; NODE_ENV=es2015 babel src -d ./es2015; node script/inject-sequences.js",
    "test": "mocha",
    "test:watch": "npm run test -- --watch"
  },
  "types": "index.d.ts",
  "version": "7.0.3"
}
